//
// Build script for Syncany
//

apply from: 'gradle/gradle/helpers.gradle'

// Global Settings /////////////////////////////////////////////////////////////

project.ext {
	applicationVersion = "0.1.4-alpha"

	applicationRelease = isApplicationRelease()
	applicationDate = new Date()
	applicationRevision = getRevision()
	
	applicationVersionSnapshot = (!applicationRelease) ? "+SNAPSHOT.${applicationDate.format('yyMMddHHmm')}.git${applicationRevision}" : ""
	applicationVersionFull = "${applicationVersion}${applicationVersionSnapshot}"
}

// Gradle scripts and tasks ////////////////////////////////////////////////////

apply from: 'gradle/gradle/application.java.gradle'
apply from: 'gradle/gradle/application.distribution.gradle'

apply from: 'gradle/gradle/packaging.innosetup.gradle'
apply from: 'gradle/gradle/packaging.fpm.gradle'

apply from: 'gradle/gradle/reports.cobertura.gradle'
apply from: 'gradle/gradle/reports.tests.gradle'
apply from: 'gradle/gradle/reports.javadoc.gradle'

apply from: 'gradle/gradle/development.eclipse.gradle'
apply from: 'gradle/gradle/development.fakeinstall.gradle'
apply from: 'gradle/gradle/development.misc.gradle'

// Projects settings  //////////////////////////////////////////////////////////

repositories {
	mavenCentral()
}

dependencies {
	compile			project(":syncany-lib")
	compile			project(":syncany-cli")
	compile			project(":syncany-util")
	compile			project(":syncany-daemon")
      	
	testCompile		project(path: ":syncany-lib", configuration: "tests")
	testCompile		project(path: ":syncany-cli", configuration: "tests")
	testCompile		project(path: ":syncany-util", configuration: "tests")  	      
	testCompile		project(path: ":syncany-daemon", configuration: "tests")	
}
