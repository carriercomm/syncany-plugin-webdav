// Application Plugin Settings and Hooks ///////////////////////////////////////	

import java.util.regex.Matcher

apply plugin: "application"

applicationName = "syncany"
mainClassName = "org.syncany.Syncany"

startScripts {
	defaultJvmOpts = [ "-Dfile.encoding=utf-8" ]
		
	doLast {		
		def defaultMaxMemory = "2048M"

		///// Windows batch files fixes/enhancements  /////
		def winFile = file getWindowsScript()

		// - Add lib/* to classpath
		winFile.text = winFile.text.replaceAll("(set CLASSPATH=.+)", 'set CLASSPATH=%APP_HOME%\\\\lib\\\\*;%AppData%\\\\Syncany\\\\plugins\\\\lib\\\\*')
		
		// - Read max memory (-Xmx) from userconfig.xml 
		String winMaxMemoryCommands = "@rem Read max memory from userconfig.xml\r\n"
		winMaxMemoryCommands += "set APP_USERCONFIG_FILE=%AppData%\\\\Syncany\\\\userconfig.xml\r\n";
		winMaxMemoryCommands += "\r\n";
		winMaxMemoryCommands += "if exist \"%APP_USERCONFIG_FILE%\" (\r\n";
		winMaxMemoryCommands += "  for /F tokens^=2^,3^,5delims^=^<^\"^=^> %%a in (%APP_USERCONFIG_FILE%) do ( \r\n";
		winMaxMemoryCommands += "    if \"%%a\" equ \"maxMemory\" set APP_MAX_MEMORY=%%b\r\n";
		winMaxMemoryCommands += "  )\r\n";
		winMaxMemoryCommands += ")\r\n";
		winMaxMemoryCommands += "\r\n";
		winMaxMemoryCommands += "if defined APP_MAX_MEMORY (\r\n";
		winMaxMemoryCommands += "  set DEFAULT_JVM_OPTS=%DEFAULT_JVM_OPTS% \"-Xmx%APP_MAX_MEMORY%\"\r\n";
		winMaxMemoryCommands += ") else (\r\n";
		winMaxMemoryCommands += "  set DEFAULT_JVM_OPTS=%DEFAULT_JVM_OPTS% \"-Xmx" + defaultMaxMemory + "\"\r\n";
		winMaxMemoryCommands += ")";
		
		winFile.text = winFile.text.replaceAll("(set DEFAULT_JVM_OPTS.+)", '$1' + Matcher.quoteReplacement("\r\n\r\n${winMaxMemoryCommands}"))
		
		// - Post Java process commands: Delayed plugin JAR file deletion (Windows only)
		String winPurgeFileDeletionCommands = "@rem Delete plugin JARs\r\n"
		winPurgeFileDeletionCommands += "SET PURGEFILE=%AppData%\\\\Syncany\\\\purgefile\r\n";
		winPurgeFileDeletionCommands += "if exist %PURGEFILE% (\r\n";
		winPurgeFileDeletionCommands += "  @for /f %%b in (%PURGEFILE%) do del /q \"%%b\" 2>NUL\r\n";
		winPurgeFileDeletionCommands += "  del /q %PURGEFILE% 2>NUL\r\n";
		winPurgeFileDeletionCommands += ")\r\n\r\n";
		
		winFile.text = winFile.text.replaceAll("(:end)", "${winPurgeFileDeletionCommands}:end")
		
		// - Append daemon batch script (handle 'sy daemon')
		def winTextTmp = ""
		def winText = winFile.text
		def windowsDaemonScript = new File("${rootProject.projectDir}/gradle/daemon/syncanyd.bat.skel").text		
		
		winText.readLines().each {
			line ->
				if (line.startsWith("\"%JAVA_EXE%\"")) {
					winTextTmp += "if \"%1\" == \"daemon\" goto daemon" + "\r\n"
					winTextTmp += line + "\r\n"
					winTextTmp += "goto afterdaemon" + "\r\n"
					
					winTextTmp += "\r\n"
					winTextTmp += ":daemon" + "\r\n"
					winTextTmp += windowsDaemonScript + "\r\n"
					
					winTextTmp += "\r\n"
					winTextTmp += ":afterdaemon" + "\r\n"
				}
				else {
					winTextTmp += line + '\n'
				}
		}
		
		winFile.text = winTextTmp
		
		///// Linux/Unix script fixes/enhancements /////
		def unixFile = file getUnixScript()
		
		// - Add lib/* to classpath
		unixFile.text = unixFile.text.replaceAll("(CLASSPATH=\\\$APP_HOME.+)", 'CLASSPATH=\\\$APP_HOME/lib/*:~/.config/syncany/plugins/lib/*')

		// - Read max memory (-Xmx) from userconfig.xml
		String unixMaxMemoryCommands = "# Read max memory from userconfig.xml\n"
		unixMaxMemoryCommands += "APP_USERCONFIG_FILE=~/.config/syncany/userconfig.xml\n";
		unixMaxMemoryCommands += "\n";
		unixMaxMemoryCommands += "if [ -f \$APP_USERCONFIG_FILE ]; then\n";
		unixMaxMemoryCommands += "    APP_MAX_MEMORY=\$(cat \$APP_USERCONFIG_FILE | sed -n 's/.*<maxMemory>\\([^<]*\\)<\\/maxMemory>.*/\\1/p')\n";
		unixMaxMemoryCommands += "fi\n";
		unixMaxMemoryCommands += "\n";
		unixMaxMemoryCommands += "if [ -z \"\$APP_MAX_MEMORY\" ]; then\n";
		unixMaxMemoryCommands += "    DEFAULT_JVM_OPTS=\"\$DEFAULT_JVM_OPTS \\\"-Xmx" + defaultMaxMemory + "\\\"\"\n";
		unixMaxMemoryCommands += "else\n";
		unixMaxMemoryCommands += "    DEFAULT_JVM_OPTS=\"\$DEFAULT_JVM_OPTS \\\"-Xmx\$APP_MAX_MEMORY\\\"\"\n";
		unixMaxMemoryCommands += "fi\n";

		unixFile.text = unixFile.text.replaceAll("(DEFAULT_JVM_OPTS=.+)", '$0' + Matcher.quoteReplacement("\n\n${unixMaxMemoryCommands}"))		

		// - Append daemon batch script (handle 'sy daemon')		
		def unixTextTmp = ""
		def unixText = unixFile.text
		def unixDaemonScript = new File("${rootProject.projectDir}/gradle/daemon/syncanyd.skel").text		
		
		unixText.readLines().each {
			line ->
				if (line.startsWith("exec")) {
					unixTextTmp += unixDaemonScript.replace("#JAVA_EXEC_REPLACEMENT_MARKER#", line);
				}
				else {
					unixTextTmp += line + '\n'
				}
		}
		
		unixFile.text = unixTextTmp
	}
}

applicationDistribution.from("${rootProject.projectDir}/") {
	include "AUTHORS.md", "CHANGELOG.md", "LICENSE.md", "README.md"

	// Copy syncany(.bat) to sy(.bat)
	from("${startScripts.outputDir}/") {
		include "syncany*"
		rename(/syncany(\.bat)?/, 'sy$1')
		into "bin"
	}
}

distTar {
	baseName = "syncany"
	version = "$applicationVersionFull"
	compression = Compression.GZIP
	extension = "tar.gz"	
}

distZip {
	baseName = "syncany"
	version = "$applicationVersionFull"
}

